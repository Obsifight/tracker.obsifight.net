extends ../layouts/layout

block content
  .ui.container
    .ui.segment

      h2.ui.center.aligned.icon.header
        i.circular.icon(style='padding:.15em!important;')
          img.ui.circular.image(src='http://web.skins.obsifight.fr/head/' + user.usernames.current + '/128', style='width: 100%')
        .content
          | #{user.usernames.current}
          .sub.header
            em Inscrit #{moment(user.registerDate).fromNow()}

      .ui.equal.width.grid
        if user.usernames.histories.length > 0
          .ui.column
            h4.ui.horizontal.divider.header
              i.write.icon
              | Changement de pseudos
            table.ui.definition.table
              tbody
                each update, index in user.usernames.histories
                  tr
                    td #{update.old_username} &rarr; #{update.new_username}
                    td #{moment(update.update_date).fromNow()}

        .ui.column
          h4.ui.horizontal.divider.header
            i.archive.icon
            | Identifiants
          table.ui.definition.table
            tbody
              tr
                td(class='two wide column') UUID
                td #{user.uuid}
              tr
                td(class='two wide column') Site
                td #{user.ids.web}
              tr
                td(class='two wide column') Authentification
                td #{user.ids.auth}
              tr
                td(class='two wide column') Logblock
                td #{user.ids.logblock}


        .ui.column
          h4.ui.horizontal.divider.header
            i.sign.in.icon
            | Dernière connexion
          table.ui.definition.table
            tbody
              tr
                td(class='two wide column') Pseudo
                td #{user.lastConnection.username}
              tr
                td(class='two wide column') Date
                td Le #{moment(user.lastConnection.date).format('L \à LT')}
              tr
                td(class='two wide column') MAC
                td #{user.lastConnection.mac_adress ? user.lastConnection.mac_adress.join(', ') : 'N/A'}
              tr
                td(class='two wide column') IP
                td #{user.lastConnection.ip}

    .ui.segment
      h2.ui.header
        i.wait.icon
        .content
          | Ses connexions
          .sub.header Liste des ses adresses IP et MAC
      button.ui.basic.button#toggleAccountsModal(data-content="Chargement en cours...")
        i.icon.users
        | Voir les potentiels doubles comptes
      .ui.equal.width.grid
        .ui.column
          table.adresses-log.ui.celled.table(cellspacing='0', width='100%')
            thead
              tr
                th IP
            tbody
              each ip, index in user.adresses.ip
                tr
                  td #{ip}
        .ui.column
          table.adresses-log.ui.celled.table(cellspacing='0', width='100%')
            thead
              tr
                th MAC
            tbody
              each mac, index in user.adresses.mac
                tr
                  td #{mac}

    .ui.grid
      .ui.two.column.row
        .ui.column
          .ui.segment
            h2.ui.header
              i.ban.icon
              .content
                | Ses sanctions
                .sub.header Historique de ses sanctions
            .ui.divider
            .ui.styled.accordion
              .title
                i.dropdown.icon
                | Voir l'historique
              .content
                .sanctions
                  .ui.active.inverted.dimmer
                    .ui.small.text.loader Chargement
                  p

        .ui.column
          .ui.segment
            h2.ui.header
              i.money.icon
              .content
                | Ses transferts de points
                .sub.header Historique lors de la V6
            .ui.divider
            .ui.styled.accordion
              .title
                i.dropdown.icon
                | Voir l'historique
              .content
                .money-timeline
                  .ui.active.inverted.dimmer
                    .ui.small.text.loader Chargement
                  p

    .ui.grid
      .ui.one.column.row
        .ui.column
          .ui.segment
            h2.ui.header
              i.protect.icon
              .content
                | Ses tués
                .sub.header Historique de ses tués/morts
            .ui.divider
            .killsStats
              .ui.active.inverted.dimmer
                .ui.small.text.loader Chargement
              p

              .ui.grid
                .ui.two.column.row
                  .column
                    table.ui.celled.table#kills
                      thead
                        tr
                          th Pseudo du joueur tué
                          th Pourcentage de correspondance
                      tbody
                  .column
                    table.ui.celled.table#deaths
                      thead
                        tr
                          th Pseudo du joueur tueur
                          th Pourcentage de correspondance
                      tbody

  .ui.modal
    .ui.icon.header
      i.users.icon
      | Potentiels doubles comptes
    .content
      table.ui.celled.table(cellspacing='0', width='100%')
        thead
          tr
            th Pseudo
            th Adresse IP en commune
            th Adresse MAC en commune
            th Dernière connexion
        tbody#accounts

block custom
  link(rel='stylesheet', href='https://cdn.datatables.net/1.10.13/css/dataTables.semanticui.min.css')
  script(type='text/javascript', src='https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js')
  script(type='text/javascript', src='https://cdn.datatables.net/1.10.13/js/dataTables.semanticui.min.js')
  script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js')
  script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/locale/fr.js')
  script(type='text/javascript').
    $(document).ready(function() {
      moment().locale('fr')
      $('.accordion').accordion()
      // ================
      //  STATS KILLS
      // ================
      $.get('/user/#{user.usernames.current}/stats', function (data) {
        if (!data.status)
          return console.error(data.error)
        data = data.data
        // kills
        var html = ''
        for (var username in data.kills.history) {
          html += '<tr>'
            html += '<td>' + username + '</td>'
            html += '<td><b>Adresse IP :</b> ' + data.kills.history[username].ip + '% &ndash; <b>Adresse MAC :</b> ' + data.kills.history[username].mac + '%</td>'
          html += '</tr>'
        }
        $('table#kills tbody').append(html)
        // deaths
        html = ''
        for (var username in data.deaths.history) {
          html += '<tr>'
            html += '<td>' + username + '</td>'
            html += '<td><b>Adresse IP :</b> ' + data.deaths.history[username].ip + '% &ndash; <b>Adresse MAC :</b> ' + data.deaths.history[username].mac + '%</td>'
          html += '</tr>'
        }
        $('table#deaths tbody').append(html)
        // dimmer
        $('.killsStats .ui.active.inverted.dimmer').remove()
        $('.killsStats').prepend('<div class="ui tiny statistics" style="margin-left: auto;margin-right: auto;display: block;text-align: center;">' +
          '<div class="statistic">'+
            '<div class="value">' + data.kills.count + '</div>' +
            '<div class="label">Tués</div>'+
          '</div>'+
          '<div class="statistic">'+
            '<div class="value">' + data.deaths.count + '</div>' +
            '<div class="label">Morts</div>' +
          '</div>' +
          '<div class="statistic">'+
            '<div class="value">' + data.ratio + '</div>' +
            '<div class="label">Ratio</div>' +
          '</div>' +
        '</div><div class="ui divider"></div>')
      })
      // ================
      // DOUBLE ACCOUNTS
      // ================
      $('#toggleAccountsModal').popup()
      $.get('/user/#{user.usernames.current}/accounts', function (data) {
        if (!data.status)
          return console.error(data.error)
        data = data.data
        // add data to modal
        var html = ''
        for (var username in data.user.accounts) {
          html += '<tr>'
            html += '<td>' + username + '</td>'
            html += '<td>' + data.user.accounts[username].ip.join(', ') + '</td>'
            html += '<td>' + data.user.accounts[username].mac.join(', ') + '</td>'
            html += '<td>Le ' + moment(data.user.accounts[username].lastConnection).format('L \à LT') + '</td>'
          html += '</tr>'
        }
        $('tbody#accounts').append(html)
        $('#toggleAccountsModal').attr('onclick', "$('.ui.modal').modal('show')").attr('disabled', false).removeClass('disabled').popup('destroy')
      })
      // ========
      // DATATABLES
      // ========
      $('.adresses-log').DataTable({
        info: false,
        bLengthChange: false,
        ordering: false
      })
      // =========
      // SANCTIONS
      // =========
      $.get('/user/#{user.usernames.current}/sanctions', function (data) {
        if (!data.status)
          return console.error(data.error)
        // each sanctions
        data = data.data
        var sanction
        var sanctions = []
        // BANS
        for (var i = 0; i < data.bans.length; i++) {
          sanction = data.bans[i]
          sanctions.push({
            type: 'ban',
            staff: sanction.staff.username,
            date: sanction.date,
            reason: sanction.reason
          })
        }
        // MUTES
        for (var i = 0; i < data.mutes.length; i++) {
          sanction = data.mutes[i]
          sanctions.push({
            type: 'mute',
            staff: sanction.staff.username,
            date: sanction.date,
            reason: sanction.reason
          })
        }
        // KICKS
        for (var i = 0; i < data.kicks.length; i++) {
          sanction = data.kicks[i]
          sanctions.push({
            type: 'kick',
            staff: sanction.staff.username,
            date: sanction.date,
            reason: sanction.reason
          })
        }
        // order
        sanctions.sort(function(a,b) {
          return new Date(b.date).getTime() - new Date(a.date).getTime()
        })
        // display
        var icon
        var action
        $('.sanctions').html('')
        for (var i = 0; i < sanctions.length; i++) {
          sanction = sanctions[i]
          // set var
          switch (sanction.type) {
            case 'ban':
              icon = 'ban'
              action = 'Banni'
              break;
            case 'mute':
              icon = 'write'
              action = 'Mute'
              break;
            case 'kick':
              icon = 'sign out'
              action = 'Kick'
              break;
            default:
              continue;
          }
          // add to dom
          $('.sanctions').append('<div class="ui feed">' +
            '<div class="event">' +
              '<div class="label"><i class="icon ' + icon + '"></i></div>' +
              '<div class="content">' +
                '<div class="date">' + moment(sanction.date).fromNow() + '</div>' +
                '<div class="summary">' + action + ' par <a>' + sanction.staff + '</a> pour <em>' + sanction.reason + '</em> .</div>' +
              '</div>' +
            '</div>' +
          '</div>')
        }
        if (sanctions.length === 0)
          $('.sanctions').html('<div class="ui negative message">Aucune sanction trouvée.</div>')
      })
      // =========
      // MONEY TIMELINE
      // =========
      $.get('/user/#{user.usernames.current}/money', function (data) {
        if (!data.status)
          return console.error(data.error)
        timeline = data.data.timeline
        // balance
        $('.money-timeline').html('<div class="ui tiny statistics" style="margin-left: auto;margin-right: auto;display: block;text-align: center;">' +
          '<div class="statistic">'+
            '<div class="value">' + data.data.current + '</div>' +
            '<div class="label">Points actuels</div>'+
          '</div>'+
          '<div class="statistic">'+
            '<div class="value">' + data.data.oldBalance + '</div>' +
            '<div class="label">Points de l\'ancienne version</div>' +
          '</div>' +
        '</div><div class="ui divider"></div>')
        // display
        var icon
        var action
        var color
        for (var i = 0; i < timeline.length; i++) {
          action = timeline[i]
          // set var
          switch (action.action_id) {
            case 'refund':
              icon = 'recycle'
              break;
            case 'purchase_item':
              icon = 'shopping basket'
              break;
            case 'purchase_money_paypal':
              icon = 'paypal card'
              break;
            case 'purchase_money_paysafecard':
              icon = 'credit card alternative'
              break;
            case 'purchase_money_dedipass':
              icon = 'text telephone'
              break;
            case 'purchase_money_stripe':
              icon = 'stripe'
              break;
            case 'transfer':
              icon = 'exchange'
              break;
            case 'webmarket':
              icon = 'shop'
              break;
            case 'youtube_remuneration':
              icon = 'youtube'
              break;
            default:
              continue;
          }
          if (action.action_type === 'add')
            color = 'text green'
          else
            color = 'text red'
          // add to dom
          $('.money-timeline').append('<div class="ui feed">' +
            '<div class="event">' +
              '<div class="label"><i class="icon ' + icon + '"></i></div>' +
              '<div class="content">' +
                '<div class="date">' + moment(action.date).fromNow() + '</div>' +
                '<div class="summary">' + action.action_message + '. &nbsp; <span class="' + color + '">' + action.sold + '</span></div>' +
              '</div>' +
            '</div>' +
          '</div>')
        }
        if (timeline.length === 0)
          $('.money-timeline').append('<div class="ui negative message">Aucun transfert de points boutique trouvé.</div>')
      })
    })
